body {
  min-height: 100vh;
  font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
    Helvetica, Arial, sans-serif, system-ui;
}

body::-webkit-scrollbar {
  display: none; /* Hide scrollbar in WebKit-based browsers */
  overflow: hidden;
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

main {
  transform-style: preserve-3d;
  position: relative;
  transition: scale 0.2s;
  display: grid;
  place-items: center;
  width: 100%;
}

.container {
  --scroll-padding: 0px;
  --inner-angle: calc((360 / var(--total)) * 1deg);
  --item-width: clamp(250px, 50vmin, 25rem);
  --scroll-buff: calc(var(--item-width) * var(--scroll-ratio));
  --gap: calc(var(--item-width) * var(--gap-efficient, 0.1));
  --radius: calc(
    ((var(--item-width) + var(--gap)) / sin(var(--inner-angle))) * -1
  );
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  timeline-scope: --controller;
}

[data-infinite='true'] .container {
  --scroll-padding: calc(var(--item-width) * 0.01);
  --scroll-padding: 5px;
}

main ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  display: grid;
}

main img {
  border-radius: 12px;
  width: 100%;
  height: auto;
}

[data-scroll='true'] h1 {
  opacity: 1;
}

.carousel {
  padding: 0;
}

.carousel {
  display: flex;
}

.carousel {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
}

.carousel-container {
  height: 100%;
  width: 100%;
  pointer-events: none;
  position: absolute;
  display: grid;
  place-items: center;
  inset: 0;
  transform-style: preserve-3d;
  perspective: calc(var(--perspective) * 1px);
  overflow: hidden;
}

[data-scroll='true'] .carousel,
[data-animate='true'] .carousel {
  animation: carousel calc(var(--total) * 0.5s) infinite linear;
}
.carousel {
  transform-style: preserve-3d;
  transform: translate3d(0, 0, var(--radius))
    rotateX(calc(var(--rotate-x) * 1deg)) rotateZ(calc(var(--rotate-z) * 1deg))
    rotateY(0deg);
}

@keyframes carousel {
  to {
    transform: translate3d(0, 0, var(--radius))
      rotateX(calc(var(--rotate-x) * 1deg))
      rotateZ(calc(var(--rotate-z) * 1deg)) rotateY(-360deg);
  }
}

@supports (animation-timeline: scroll()) {
  [data-scroll='true'] .carousel,
  [data-scroll='true'] .carousel::after {
    animation-duration: auto;
    animation-iteration-count: 1;
    animation-fill-mode: both;
    animation-timeline: --controller;
  }
}

.carousel::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--item-width) * 1.5);
  height: calc(var(--item-width) * 1.5);
  mask: radial-gradient(80% 80% at 50% 50%, white, transparent 50%);
  transform: translate(-50%, -50%) rotateY(0deg)
    translate3d(0, 0, calc((var(--radius) - 10px) * -1));
}

@keyframes shine {
  to {
    transform: translate(-50%, -50%) rotateY(360deg)
      translate3d(0, 0, calc((var(--radius) - 10px) * -1));
  }
}

[data-gsap='true'] .carousel::after {
  animation: none;
  transform: translate(-50%, -50%) rotateY(calc(var(--rotate) * 1deg))
    translate3d(0, 0, calc((var(--radius) - 10px) * -1));
}

.carousel li {
  --debug: red;
  height: var(--item-width);
  width: var(--item-width);
  outline-offset: 2px;
}

.carousel li {
  position: absolute;
  top: 50%;
  left: 50%;
  backface-visibility: hidden;
  transform: translate(-50%, -50%)
    rotateY(calc((var(--inner-angle) * var(--index))))
    translate3d(0, 0, calc(var(--radius) * -1));
}

[data-backface='true'] .carousel li {
  backface-visibility: visible;
}

.controller {
  display: flex;
  overflow: auto;
  width: 100%;
  height: 100%;
  /* scroll-snap-type: x mandatory; */
  scroll-timeline: --controller inline;
  align-items: center;
  padding-inline: calc(
    (50vw + var(--scroll-padding)) - (var(--scroll-buff) * 0.5)
  );
}

.controller::-webkit-scrollbar {
  display: none; /* Hide scrollbar in WebKit-based browsers */
}

[data-vertical='true'] .controller {
  flex-direction: column;
  /* scroll-snap-type: y mandatory; */
  scroll-timeline: --controller;
  padding-inline: 0;
  padding-block: calc(
    (50svh + var(--scroll-padding)) - (var(--scroll-buff) * 0.5)
  );
}

.controller li {
  --debug: red;
  height: var(--scroll-buff);
  width: var(--scroll-buff);
  aspect-ratio: 1;
  flex: 1 0 auto;
  /* scroll-snap-align: center; */
}

[data-debug='true'] li {
  outline: 2px dashed var(--debug);
}
